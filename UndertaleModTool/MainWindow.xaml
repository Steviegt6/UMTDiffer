<CustomChromeWindow x:Class="UndertaleModTool.MainWindow"
                    Closing="DataWindow_Closing"
                    IsVisibleChanged="Window_IsVisibleChanged"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:local="clr-namespace:UndertaleModTool"
                    xmlns:viewModels="clr-namespace:AakStudio.Shell.UI.Showcase.ViewModels"
                    xmlns:styles="clr-namespace:AakStudio.Shell.UI.Showcase.Styles"
                    xmlns:shell="clr-namespace:AakStudio.Shell.UI.Showcase.Shell"
                    xmlns:viewModels1="clr-namespace:UndertaleModTool.ViewModels"
                    Width="1280"
                    Height="720"
                    d:DataContext="{d:DesignInstance Type=viewModels1:WorkSpaceViewModel}"
                    Activated="MetroWindow_Activated"
                    DataContext="{x:Static viewModels1:WorkSpaceViewModel.Default}"
                    Icon="pack://application:,,,/icon.ico"
                    IsShowIcon="False"
                    IsShowTitle="False"
                    OnMaximizedPadding="0"
                    RenderOptions.BitmapScalingMode="Fant"
                    ResizeMode="CanResizeWithGrip"
                    SnapsToDevicePixels="True"
                    TextOptions.TextFormattingMode="Display"
                    TextOptions.TextRenderingMode="ClearType"
                    UseLayoutRounding="True"
                    WindowStartupLocation="CenterScreen"
                    Loaded="Window_Loaded"
                    AllowDrop="True"
                    Drop="Window_Drop"
                    mc:Ignorable="d">
    <CustomChromeWindow.LeftWindowCommands>
        <Grid Margin="2,3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Viewbox
                Width="20"
                Height="20"
                Margin="10,3,2,0"
                VerticalAlignment="Top"
                IsHitTestVisible="False">
                <Image
                    Source="/Resources/icon.png"
                    Width="20"
                    Height="20" />
            </Viewbox>
            <Menu Grid.Column="1" Margin="0,2,0,0">
                <MenuItem Header="_File">
                    <MenuItem Header="_New" Command="New" InputGestureText="Ctrl+N" />
                    <MenuItem Header="_Open" Command="Open" InputGestureText="Ctrl+O" />
                    <MenuItem Header="_Save" Command="Save" InputGestureText="Ctrl+S">
                        <MenuItem.Style>
                            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                <Setter Property="IsEnabled" Value="{Binding CanSave}" />
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="_Temp run game" Command="Print" InputGestureText="F5">
                        <!-- TODO: I think I need a custom command for that... -->
                        <MenuItem.Style>
                            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                <Setter Property="IsEnabled" Value="{Binding CanSave}" />
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem Name="RunGMSDebuggerItem" Header="Run game under GMS _debugger" Command="PrintPreview" InputGestureText="Shift+F5">
                        <MenuItem.Style>
                            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                <Setter Property="IsEnabled" Value="{Binding CanSave}" />
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem Header="Run game with other runner" Command="CancelPrint" InputGestureText="Alt+F5">
                        <MenuItem.Style>
                            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                <Setter Property="IsEnabled" Value="{Binding CanSave}" />
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Generate o_ffset map" Click="MenuItem_OffsetMap_Click" />
                    <Separator />
                    <MenuItem Header="S_ettings" Command="Properties" />
                    <MenuItem Header="_Close" Command="Close" InputGestureText="Ctrl+Q" />
                </MenuItem>
                <MenuItem Header="_View">
                    <MenuItem
                        Header="{Binding ProjectExplorer.Title}"
                        IsCheckable="True"
                        IsChecked="{Binding ProjectExplorer.IsVisible, Mode=TwoWay}" />
                </MenuItem>
                <MenuItem x:Name="RootScriptItem" Header="_Scripts" SubmenuOpened="RootMenuItem_SubmenuOpened">
                    <MenuItem Header="(...loading...)" IsEnabled="False" />
                </MenuItem>
                <MenuItem Header="_Find">
                    <MenuItem.Resources>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Data, Mode=OneWay}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Resources>

                    <MenuItem Header="Find unreferenced _assets" Name="FindUnreferencedAssetsItem" Click="MenuItem_FindUnreferencedAssets_Click" />
                    <Separator />
                    <MenuItem Header="(script links)" FontStyle="Italic" IsEnabled="False" />
                    <MenuItem Header="Search in _code (&quot;Search.csx&quot;)"
                              Click="MenuItem_RunBuiltinScript_Item_Click" CommandParameter="Scripts\Builtin Scripts\Search.csx" />
                    <MenuItem Header="Search in _assembly (&quot;SearchASM.csx&quot;)"
                              Click="MenuItem_RunBuiltinScript_Item_Click" CommandParameter="Scripts\Builtin Scripts\SearchASM.csx" />
                    <MenuItem Header="Search in _specific code (&quot;SearchLimited.csx&quot;)"
                              Click="MenuItem_RunBuiltinScript_Item_Click" CommandParameter="Scripts\Builtin Scripts\SearchLimited.csx" />
                </MenuItem>
                <MenuItem Header="_Help">
                    <MenuItem Header="_GitHub" Click="MenuItem_GitHub_Click" />
                    <MenuItem Header="_About" Click="MenuItem_About_Click" />
                </MenuItem>
            </Menu>
            <Border
                Grid.Column="2"
                Margin="5,2,0,0"
                VerticalAlignment="Top"
                IsHitTestVisible="False">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Background" Value="Transparent" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SystemColorsWindowPanel}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <TextBlock
                    Margin="6,4,6,4"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontWeight="Bold"
                    Text="{Binding Title, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                    TextTrimming="CharacterEllipsis">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource EnvironmentMainWindowInactiveCaptionText}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Border>
        </Grid>
    </CustomChromeWindow.LeftWindowCommands>
    <CustomChromeWindow.RightWindowCommands>
        <StackPanel Orientation="Horizontal">
            <!--<ComboBox
                Width="160"
                Margin="6"
                VerticalAlignment="Top"
                DisplayMemberPath="Name"
                ItemsSource="{x:Static local:AakThemeCollection.AllThemes}"
                SelectedItem="{Binding CurrentTheme, Mode=TwoWay}" />-->
            <Button
                Width="45"
                Height="32"
                VerticalAlignment="Top"
                BorderBrush="{Binding Background, RelativeSource={RelativeSource Self}}"
                Content="✨" />
        </StackPanel>
    </CustomChromeWindow.RightWindowCommands>
    <Window.Resources>
        <local:ImplementsInterfaceConverter x:Key="ImplementsInterfaceConverter" />
        <local:FilteredViewConverter x:Key="FilteredViewConverter" Filter="{Binding Text, Source={x:Reference SearchBox}, UpdateSourceTrigger=PropertyChanged}" />
        <local:NullToVisibilityConverter x:Key="VisibleIfNotNull" nullValue="Collapsed" notNullValue="Visible" />
        <local:CompareNumbersConverter x:Key="CompareNumbersConverter" />
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" /> <!-- (built-in converter) -->
        <!--<local:TabTitleConverter x:Key="TabTitleConverter" />-->
        <local:StringTitleConverter x:Key="StringTitleConverter" />
        <local:ForwardButtonEnabledConverter x:Key="ForwardButtonEnabledConverter" />
        <local:MainWindowTitleConverter x:Key="MainWindowTitleConverter" />
    </Window.Resources>
    <Window.Title>
        <MultiBinding Converter="{StaticResource MainWindowTitleConverter}">
            <Binding Path="Data.GeneralInfo" FallbackValue="No game loaded" />
            <Binding Path="FilePath" />
        </MultiBinding>
    </Window.Title>
    <Window.CommandBindings>
        <CommandBinding Command="New" Executed="Command_New" />
        <CommandBinding Command="Open" Executed="Command_Open" />
        <CommandBinding Command="Save" Executed="Command_Save" />
        <CommandBinding Command="Close" Executed="Command_Close" />
        <CommandBinding Command="Copy" Executed="Command_Copy" />
        <CommandBinding Command="Paste" Executed="Command_Paste" />
        <CommandBinding Command="Print" Executed="Command_Run" />
        <CommandBinding Command="CancelPrint" Executed="Command_RunSpecial" />
        <CommandBinding Command="PrintPreview" Executed="Command_RunDebug" />
        <CommandBinding Command="Properties" Executed="Command_Settings" />
        <CommandBinding Command="{x:Static local:MainWindow.CloseTabCommand}" Executed="Command_CloseTab" />
        <CommandBinding Command="{x:Static local:MainWindow.CloseAllTabsCommand}" Executed="Command_CloseAllTabs" />
        <CommandBinding Command="{x:Static local:MainWindow.RestoreClosedTabCommand}" Executed="Command_RestoreClosedTab" />
        <CommandBinding Command="{x:Static local:MainWindow.SwitchToNextTabCommand}" Executed="Command_SwitchToNextTab" />
        <CommandBinding Command="{x:Static local:MainWindow.SwitchToPrevTabCommand}" Executed="Command_SwitchToPrevTab" />
        <CommandBinding Command="NavigationCommands.BrowseBack" Executed="Command_GoBack" />
        <CommandBinding Command="NavigationCommands.BrowseForward" Executed="Command_GoForward" />
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="N" Command="New" />
        <KeyBinding Modifiers="Control" Key="O" Command="Open" />
        <KeyBinding Modifiers="Control" Key="S" Command="Save" />
        <KeyBinding Modifiers="Control" Key="Q" Command="Close" />
        <KeyBinding Modifiers="Control" Key="C" Command="Copy" />
        <KeyBinding Modifiers="Control" Key="P" Command="Paste" />
        <KeyBinding Key="F5" Command="Print" />
        <KeyBinding Modifiers="Alt" Key="F5" Command="CancelPrint" />
        <KeyBinding Modifiers="Shift" Key="F5" Command="PrintPreview" />
        <KeyBinding Modifiers="Control" Key="W" Command="{x:Static local:MainWindow.CloseTabCommand}" />
        <KeyBinding Gesture="Ctrl+Shift+W" Command="{x:Static local:MainWindow.CloseAllTabsCommand}" />
        <KeyBinding Gesture="Ctrl+Shift+T" Command="{x:Static local:MainWindow.RestoreClosedTabCommand}" />
        <KeyBinding Gesture="Ctrl+Tab" Command="{x:Static local:MainWindow.SwitchToNextTabCommand}" />
        <KeyBinding Gesture="Ctrl+Shift+Tab" Command="{x:Static local:MainWindow.SwitchToPrevTabCommand}" />
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ToolBarTray Margin="9,4,0,0">
            <ToolBar BandIndex="1">
                <Button ToolTip="Back" Margin="0,0,2,0" x:Name="BackButton" Click="BackButton_Click">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentTab.HistoryPosition}" Value="0">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Name="BackButtonImage" Source="/Resources/Backwards.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.2" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
                <Button ToolTip="Forward" x:Name="ForwardButton" Click="ForwardButton_Click">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource ForwardButtonEnabledConverter}" Mode="OneWay">
                            <Binding Path="CurrentTab.HistoryPosition" Mode="OneWay" />
                            <Binding Path="CurrentTab.History.Count" Mode="OneWay" />
                        </MultiBinding>
                    </Button.IsEnabled>
                    <Image Name="ForwardButtonImage" Source="/Resources/Forwards.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.2" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
            </ToolBar>
        </ToolBarTray>
        <DockingManager
            Grid.Row="1"
            x:Name="dockingManager"
            ActiveContent="{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource AakActiveDocumentConverter}}"
            ActiveContentChanged="DockingManager_ActiveContentChanged"
            AnchorablesSource="{Binding Anchorables}"
            DocumentTitleTemplate="{StaticResource AakDocumentWellTitleTemplate}"
            DocumentsSource="{Binding DocumentViews}">
            <DockingManager.LayoutItemTemplateSelector>
                <styles:AakTemplateSelector>
                    <styles:AakTemplateSelector.AakDocumentWellTemplate>
                        <DataTemplate DataType="{x:Type shell:AakDocumentWell}">
                            <ScrollViewer HorizontalScrollBarVisibility="Auto">
                                <Grid Margin="15">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="15" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <TextBlock
                                        FontSize="16"
                                        FontWeight="Bold"
                                        Text="{Binding Title}" />
                                    <ContentPresenter Grid.Row="2" Content="{Binding View}" />
                                </Grid>
                            </ScrollViewer>
                        </DataTemplate>
                    </styles:AakTemplateSelector.AakDocumentWellTemplate>
                    <styles:AakTemplateSelector.AakToolWellTemplate>
                        <DataTemplate DataType="{x:Type shell:AakToolWell}">
                            <ContentPresenter Content="{Binding View}" />
                        </DataTemplate>
                    </styles:AakTemplateSelector.AakToolWellTemplate>
                    <styles:AakTemplateSelector.AakCollectionTemplate>
                        <DataTemplate DataType="{x:Type shell:AakCollection}">
                            <ScrollViewer HorizontalScrollBarVisibility="Auto">
                                <Grid Margin="15">
                                    <StackPanel>
                                        <TextBlock FontSize="24" Text="{Binding Title}" />
                                        <ItemsControl ItemsSource="{Binding Views, Mode=OneWay}" />
                                    </StackPanel>
                                </Grid>
                            </ScrollViewer>
                        </DataTemplate>
                    </styles:AakTemplateSelector.AakCollectionTemplate>
                </styles:AakTemplateSelector>
            </DockingManager.LayoutItemTemplateSelector>
            <DockingManager.LayoutItemContainerStyleSelector>
                <styles:AakStyleSelector>
                    <styles:AakStyleSelector.AakDocumentWellStyle>
                        <Style TargetType="{x:Type LayoutItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="ToolTip" Value="{Binding Model.ToolTip}" />
                            <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                        </Style>
                    </styles:AakStyleSelector.AakDocumentWellStyle>
                    <styles:AakStyleSelector.AakToolWellStyle>
                        <Style TargetType="{x:Type LayoutAnchorableItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}" />
                            <Setter Property="CanHide" Value="{Binding Model.CanHide, Mode=TwoWay}" />
                            <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}" />
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
                        </Style>
                    </styles:AakStyleSelector.AakToolWellStyle>
                </styles:AakStyleSelector>
            </DockingManager.LayoutItemContainerStyleSelector>
            <LayoutRoot>
                <LayoutPanel Orientation="Horizontal">
                    <LayoutDocumentPaneGroup>
                        <LayoutDocumentPane />
                    </LayoutDocumentPaneGroup>
                </LayoutPanel>
            </LayoutRoot>
        </DockingManager>
        <StatusBar
            x:Name="mainStatusBar"
            Grid.Row="2"
            Background="{x:Null}"
            Foreground="{DynamicResource SystemColorsWindowText}">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Margin="2,0,0,0" Content="Ready" />
            <Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="2" HorizontalContentAlignment="Stretch">
                <TextBox x:Name="CommandBox" AcceptsReturn="True" PreviewKeyDown="CommandBox_PreviewKeyDown" />
            </StatusBarItem>
            <Separator Grid.Column="3" />
            <StatusBarItem Grid.Column="4">
                <Label Content="None" HorizontalAlignment="Right" VerticalAlignment="Top" VerticalContentAlignment="Top" Name="ObjectLabel"
                       ToolTip="This is an ID (index) of the currently open object. It starts from 0."
                       ToolTipService.InitialShowDelay="200" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</CustomChromeWindow>